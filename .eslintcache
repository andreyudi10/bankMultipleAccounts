[{"/home/macanmeong/ReactBaru/aplikasibank/src/index.js":"1","/home/macanmeong/ReactBaru/aplikasibank/src/App.js":"2","/home/macanmeong/ReactBaru/aplikasibank/src/reportWebVitals.js":"3","/home/macanmeong/ReactBaru/aplikasibank/src/pages/Home.js":"4","/home/macanmeong/ReactBaru/aplikasibank/src/pages/DetailBank.js":"5"},{"size":547,"mtime":1619809253573,"results":"6","hashOfConfig":"7"},{"size":673,"mtime":1619776925285,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612399019386,"results":"9","hashOfConfig":"7"},{"size":2656,"mtime":1619864480159,"results":"10","hashOfConfig":"7"},{"size":2053,"mtime":1619863133483,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1i7r3h1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/macanmeong/ReactBaru/aplikasibank/src/index.js",[],["24","25"],"/home/macanmeong/ReactBaru/aplikasibank/src/App.js",[],"/home/macanmeong/ReactBaru/aplikasibank/src/reportWebVitals.js",[],"/home/macanmeong/ReactBaru/aplikasibank/src/pages/Home.js",["26","27","28"],"/home/macanmeong/ReactBaru/aplikasibank/src/pages/DetailBank.js",["29","30","31","32"],"import React, { useEffect, useState } from 'react';\nimport { MDBBtn } from 'mdb-react-ui-kit';\nimport { useParams} from \"react-router-dom\";\nimport { Link } from 'react-router-dom'\nimport dataLihat from './data.json'\nimport {MDBTable, MDBTableBody,MDBTableHead} from 'mdb-react-ui-kit'\n\nfunction DetailBank(props) {    \n    const {id} = useParams()\n    const [data,setData] = useState(dataLihat.data)\n    const hasil = data.filter((aray)=>aray.accountNumber==id)                  \n    const [currency,setCurrency] = useState(hasil[0].currency)\n      \n\n\n    const ulang =hasil[0].details.map((value,key)=>\n        <>\n            <tr >\n                <th scope='row'>{value.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</th>\n                <th scope='row'>{value.date}</th>\n                <th scope='row'>{currency}</th>                         \n                <th scope='row'>{value.debit}</th>\n                <th scope='row'>{value.credit}</th>\n                <th scope='row'>{value.transactionnarative}</th>\n            </tr>                    \n        </>\n    )\n    // useEffect(()=>\n    //     console.log(data)\n    // ,[])\n    return(\n        <div>\n            Detail Bank                            \n            <Link to=\"/\">\n                <MDBBtn>balik</MDBBtn>                \n            </Link>\n            <MDBTable hover>\n            <MDBTableHead className=\"bg-primary shadow-1-strong text-light\">\n                <tr>\n                    <th scope='col'>Value</th>\n                    <th scope='col'>Date</th>\n                    <th scope='col'>Currency</th>                    \n                    <th scope='col'>Debit</th>                    \n                    <th scope='col'>Credit</th>                    \n                    <th scope='col'>Transaction Narrative</th>                    \n                </tr>\n            </MDBTableHead>\n\n            <MDBTableBody>\n                {ulang}\n            </MDBTableBody>\n        </MDBTable>                     \n        </div>\n    )\n}\n\nexport default DetailBank;\n\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":16,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},{"ruleId":"37","severity":1,"message":"41","line":4,"column":10,"nodeType":"39","messageId":"40","endLine":4,"endColumn":16},{"ruleId":"37","severity":1,"message":"42","line":8,"column":17,"nodeType":"39","messageId":"40","endLine":8,"endColumn":24},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"42","line":10,"column":17,"nodeType":"39","messageId":"40","endLine":10,"endColumn":24},{"ruleId":"43","severity":1,"message":"44","line":11,"column":57,"nodeType":"45","messageId":"46","endLine":11,"endColumn":59},{"ruleId":"37","severity":1,"message":"47","line":12,"column":21,"nodeType":"39","messageId":"40","endLine":12,"endColumn":32},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MDBBtn' is defined but never used.","'setData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCurrency' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]